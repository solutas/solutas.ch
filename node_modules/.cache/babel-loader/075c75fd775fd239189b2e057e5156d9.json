{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport Icon from \"../assets/solutas-brief-weiss.png\";\nimport Icon2 from \"../assets/solutas-icon.png\";\nimport eventService from \"../services/ScrollEventService\"; // color1=\"#4b6bb7ed\" color2=\"#182848e5\" color=\"\"\n\nvar TopNavigation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TopNavigation, _React$Component);\n\n  function TopNavigation(props) {\n    var _this;\n\n    _classCallCheck(this, TopNavigation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TopNavigation).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"elementHeight\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"highlight\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollEvent\", function (event) {\n      _this.offsetTop = window.pageYOffset;\n\n      _this.calculateNav();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"calculateNav\", function () {\n      if (_this.offsetTop >= _this.elementHeight && !_this.highlight) {\n        _this.setState({\n          highlight: true\n        });\n\n        _this.highlight = true;\n        eventService.emmit({\n          subject: \"TOPNAV_CHANGE\",\n          status: true\n        });\n      } else if (_this.offsetTop < _this.elementHeight && _this.highlight) {\n        _this.setState({\n          highlight: false\n        });\n\n        _this.highlight = false;\n        eventService.emmit({\n          subject: \"TOPNAV_CHANGE\",\n          status: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateElementHeight\", function () {\n      if (_this.navigationElement) _this.elementHeight = _this.navigationElement.offsetHeight + 50;\n    });\n\n    _this.navigationElement = React.createRef();\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: false,\n      highlight: false\n    };\n    return _this;\n  }\n\n  _createClass(TopNavigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateElementHeight();\n      window.addEventListener(\"scroll\", this.handleScrollEvent);\n      window.addEventListener(\"resize\", this.updateElementHeight);\n      this.offsetTop = this.navigationElement.offsetTop;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(this.handleScrollEvent);\n      window.removeEventListener(this.updateElementHeight);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        ref: function ref(_ref) {\n          return _this2.navigationElement = _ref;\n        },\n        className: \"jsx-3810854153\" + \" \" + ((this.state.highlight ? \"fixed-top navactive brandnav\" : \"fixed-top brandnav\") || \"\")\n      }, React.createElement(Navbar, {\n        color: this.state.highlight ? \"primary\" : \"none\",\n        expand: \"md\",\n        className: \"TopNavigation md-auto\"\n      }, React.createElement(NavbarBrand, {\n        href: \"/\"\n      }, React.createElement(\"img\", {\n        src: Icon2,\n        className: \"jsx-3810854153\" + \" \" + \"logoicon\"\n      })), React.createElement(NavbarToggler, {\n        onClick: this.toggle\n      }), React.createElement(Collapse, {\n        isOpen: this.state.isOpen,\n        navbar: true\n      }, React.createElement(Nav, {\n        className: \"ml-auto\",\n        navbar: true\n      }, React.createElement(NavItem, null, React.createElement(NavLink, {\n        href: \"/components/\"\n      }, \"About Us \")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        href: \"https://github.com/reactstrap/reactstrap\"\n      }, \"Custom Development\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        href: \"/components/\"\n      }, \"Our Services\"))))), React.createElement(_JSXStyle, {\n        id: \"3810854153\"\n      }, [\".bg-solutas.jsx-3810854153{background-color:r;}\"]));\n    }\n  }]);\n\n  return TopNavigation;\n}(React.Component);\n\nexport { TopNavigation as default };","map":null,"metadata":{},"sourceType":"module"}